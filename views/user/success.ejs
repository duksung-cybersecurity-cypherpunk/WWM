<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta content="width=device-width, initial-scale=1.0" name="viewport">

  <title>WWM</title>
  <meta content="WWM의 마이페이지" name="description">
  <meta content="WWM, 마이페이지" name="keywords">

  <!-- Favicons -->
  <link href="/images/메인 아이콘.jpg" rel="icon">
  <link href="/images/메인 아이콘.jpg">

  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">

  <!-- Vendor CSS Files -->
  <link href="/stylesheets/aos.css" rel="stylesheet">
  <link href="/stylesheets/bootstrap.min.css" rel="stylesheet">
  <link href="/stylesheets/bootstrap-icons.css" rel="stylesheet">
  <link href="/stylesheets/boxicons.min.css" rel="stylesheet">
  <link href="/stylesheets/glightbox.min.css" rel="stylesheet">
  <link href="/stylesheets/swiper-bundle.min.css" rel="stylesheet">

  <!-- Template Main CSS File -->
  <link href="/stylesheets\inner.css" rel="stylesheet">

  <!-- =======================================================
  * Template Name: Bocor
  * Template URL: https://bootstrapmade.com/bocor-bootstrap-template-nice-animation/
  * Updated: Mar 17 2024 with Bootstrap v5.3.3
  * Author: BootstrapMade.com
  * License: https://bootstrapmade.com/license/
  ======================================================== -->
</head>

<body>

  <!-- ======= Header ======= -->
  <header id="header">
    <div class="container d-flex align-items-center justify-content-between">

      <div class="logo">
        <h1><a href="http://localhost:3000/users/success">WWM<span>.</span></a></h1>
        <!-- Uncomment below if you prefer to use an image logo -->
        <!-- <a href="index.html"><img src="assets/img/logo.png" alt="" class="img-fluid"></a>-->
      </div>

      <nav id="navbar" class="navbar">
        <ul>
          <li><a class="nav-link scrollto active" href="http://localhost:3000/users/success">Home</a></li>
          <li><a class="nav-link scrollto" href="#features">Services</a></li>
          <li><a class="nav-link scrollto" href="#portfolio">Shop</a></li>
          <li><a class="nav-link scrollto" href="#team">Team</a></li>
          <li><a class="nav-link scrollto" href="#faq">About Us</a></li>
          <li><a class="nav-link scrollto" href="#contact">Contact</a></li>
          <li><a class="nav-link scrollto" href="http://localhost:3000/users/mypage">My Page</a></li>

          <form action ="/users/logout" method="get">
            <input type = "submit" class="getstarted scrollto" value="Logout">
          </form>
        </ul>
        <i class="bi bi-list mobile-nav-toggle"></i>
      </nav><!-- .navbar -->

    </div>
  </header><!-- End Header -->

  <!-- ======= Hero Section ======= -->
  <section id="hero">

    <div class="container">
      <div class="row d-flex align-items-center">
      <div class=" col-lg-6 py-5 py-lg-0 order-2 order-lg-1" data-aos="fade-right">
        <h1>Walk With Me </h1>
        <h2>가벼운 산책으로 재밌게 운동을 하고 싶은 사람들에게 삶에서 소소한 행복을 찾을 수 있는 워크윗미</h2>
        <form action ="/users/logout" method="get">
            <input type = "submit" class="btn-get-started scrollto" value="로그아웃">
          </form>
  
      </div>
      <div class="col-lg-6 order-1 order-lg-2 산책2.jpg" data-aos="fade-left">
        <img src="/images\산책2.jpg" class="img-fluid" alt="">
      </div>
    </div>
    </div>

  </section><!-- End Hero -->

  <main id="main">
  
    <script>
      function submitUserInfo() {
        // 사용자 기본 정보 제출 처리
        // var name = document.getElementById('name').value;
        // var id = document.getElementById('id').value;
        // var pw = document.getElementById('pw').value;
        // var nick = document.getElementById('nick').value;
        // 여기서 데이터 처리나 서버로 전송 등의 추가 작업 수행 가능
        // console.log(name, id, pw, nick);
      }
  
      function calculateScore() {
        var nick = document.getElementById('nick').value;
        var age = document.getElementById('age').value;
        var city = document.getElementById('city').value;
        var healthCondition = document.getElementById('healthCondition').value;
        var exerciseTime = document.getElementById('exerciseTime').value;
    
        var score = 0;
    
        // 나이에 따른 점수 계산
        if (age === '19세이하') {
          score += 1;
        } else if (age === '20대~30대') {
          score += 2;
        } else if (age === '40대~50대') {
          score += 3;
        } else if (age === '60대이상') {
          score += 4;
        }
    
        // 건강 상태에 따른 점수 계산
        if (healthCondition === '무릎') {
          score += 4;
        } else if (healthCondition === '천식') {
          score += 3;
        } else if (healthCondition === '당뇨') {
          score += 2;
        } else if (healthCondition === '허리통증') {
          score += 1;
        }
    
        // 운동 시간에 따른 점수 계산
        if (exerciseTime === '30분미만') {
          score += 4;
        } else if (exerciseTime === '30분이상~1시간미만') {
          score += 3;
        } else if (exerciseTime === '1시간이상~2시간미만') {
          score += 2;
        } else if (exerciseTime === '2시간이상') {
          score += 1;
        }
    
        // 점수를 작은 창으로 표시
        var resultWindow = window.open('', '_blank', 'width=400,height=300');
        resultWindow.document.write('<html><head><title>계산된 점수</title></head><body>');
        resultWindow.document.write('<h1 style="text-align:center;">계산된 점수</h1>');
        
        // 점수에 따라 메시지 선택
        var message = '';
        if (score >= 1 && score <= 4) {
          message = 'NORMAL (정상)';
          resultWindow.document.write('<h2 style="text-align:center; font-size: 3em; color: green;">' + score + '</h2>');
        } else if (score >= 5 && score <= 8) {
          message = 'ELEVATED (상승)';
          resultWindow.document.write('<h2 style="text-align:center; font-size: 3em; color: orange;">' + score + '</h2>');
        } else if (score >= 9 && score <= 12) {
          message = 'DANGEROUS (위험)';
          resultWindow.document.write('<h2 style="text-align:center; font-size: 3em; color: red;">' + score + '</h2>');
        }
        
        resultWindow.document.write('<p style="text-align:center; font-size: 2em;">본인의 건강 점수에 맞는 산책로를 추천해드리겠습니다.</p>');
        resultWindow.document.write('');
        resultWindow.document.close();
      }
    </script>


    



    <!-- <li><i class="bi bi-check"></i>여기부터 지도 코드.</li> -->
   

        <script src="https://apis.openapi.sk.com/tmap/jsv2?version=1&appKey=cVhL84LFFs9gcbpfi3KiH1uTXSIzKo196YqIK3eN"></script>
        <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAmhEiuwQ1N3yFtSVQgb6MF7gGpY4drzuM&libraries=places"
            async defer></script>
    
    
    <section id="ref">
    
        <div class="container">
            <h1>산책로 추천 및 경로 공유</h1>

           
            <div id="controls" class="row" >
              
              <form action="/users/success" method="post" onsubmit="return searchRoute();">
                
                <div class="aaa">
                    <label for="start" class="form-label">출발지:</label>
                    <input type="text" id="start" name="start" class="form-control" placeholder="출발지를 입력하세요">
                  </div>
                  <div class="aaa">
                    <label for="end" class="form-label">도착지:</label>
                    <input type="text" id="end" name="end" class="form-control" placeholder="도착지를 입력하세요">
                </div>
                <div class="aaa">
                  <label for="sppbStageSelect" class="form-label">SPPB 단계 선택:</label>
              <select id="sppbStageSelect" class="form-control" name="sppb">
                  <option value="stage-1">SPPB 1단계 (매우 정상)</option>
                  <option value="stage-2">SPPB 2단계 (정상)</option>
                  <option value="stage-3">SPPB 3단계 (약간 위험)</option>
                  <option value="stage-3">SPPB 4단계 (높은 위험)</option>
              </select>  
                </div>

                <div class="aaa">
                  <label for="scoreSelect" class="form-label">점수 선택:</label>
                <select id="scoreSelect" class="form-control" name="s_altitude">
                    <option value="0-4">0~4점 (고도차 0~30m)</option>
                    <option value="5-8">5~8점 (고도차 30~100m)</option>
                    <option value="9-12">9~12점 (고도차 100m 이상)</option>
                </select>
                </div>
                
                <div class="aaa">
                    <button class="btn btn-primary">길 찾기</button>
                </div>
              
              </form>
                
                <div class="aaa">
                    <button class="btn btn-secondary" name="findTrails" id="findTrails">근처 산책로 및 공원 찾기</button>
                </div>

                
              </div>              
            
            
            
         
            <div id="tags" class="row">
                <div class="col-md-12">
                    <label for="path-tags" class="form-label">경로 태그:</label>
                    <input type="text" id="path-tags" class="form-control" placeholder="#벚꽃길 #야경길 #하이킹">
                    <button class="btn btn-primary mt-2" onclick="createAndSharePath()">나만의 산책로 공유하기</button>
                </div>
            </div>
    
            <div id="message" class="mt-2"></div>
    
            <div id="map"></div>
    
            <button class="btn-show-all" id="showAllTrails" style="display:none;" onclick="showAllTrails()">산책로 전체보기</button>

            <!-- 지도 및 경로 탐색과 산책로 찾기 기능 -->
            <script>
             let map;
            let autocompleteStart, autocompleteEnd;
            let markerList = [];
            let hiddenMarkerList = [];
            let allMarkerList = [];
            let userLocation = null;
            let activeInfoWindow = null;
            let currentPolyline = null;
            let stayStartTime = null; // 산책로에 머문 시간을 측정하는 시작 시간
            let stayDuration = {};
            let userMarker;
            let dynamicTrailLocations = [];

            function initMap() {
                map = new Tmapv2.Map("map", {
                    center: new Tmapv2.LatLng(37.5665, 126.9780),
                    width: "100%",
                    height: "500px",
                    zoom: 12
                });

                // 출발지 및 도착지 자동완성
                autocompleteStart = new google.maps.places.Autocomplete(document.getElementById('start'));
                autocompleteEnd = new google.maps.places.Autocomplete(document.getElementById('end'));

                if (navigator.geolocation) {
                    navigator.geolocation.watchPosition(updateUserLocation, function () {
                        alert("위치 정보를 가져올 수 없습니다.");
                    });
                }
            }
              // 검색된 산책로 위치를 추가하는 함수 (산책로 검색 후 호출)
            function addTrailLocation(lat, lng, name) {
                dynamicTrailLocations.push({ lat: lat, lng: lng, name: name });
                stayDuration[name] = 0; // 산책로별 머문 시간 초기화
            }

            function updateUserLocation(position) {
                const lat = position.coords.latitude;
                const lng = position.coords.longitude;
                userLocation = { lat: lat, lng: lng };

                // 사용자의 현재 위치에 마커 추가 또는 업데이트
                if (!userMarker) {
                    // 처음 마커를 생성
                    userMarker = new Tmapv2.Marker({
                        position: new Tmapv2.LatLng(lat, lng),
                        icon: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png", // 파란색 마커 아이콘
                        map: map,
                    });
                    map.setCenter(new Tmapv2.LatLng(lat, lng)); // 지도를 초기 위치에 맞게 설정
                } else {
                    // 마커 위치 업데이트
                    userMarker.setPosition(new Tmapv2.LatLng(lat, lng));
                }
                checkStayDuration(lat, lng);
            }
            function checkStayDuration(lat, lng) {
              const stayRadius = 100; // 산책로 반경 (미터 단위)

              let nearTrail = null;
              for (const trail of dynamicTrailLocations) {
                  const distance = calculateDistance(lat, lng, trail.lat, trail.lng);

                  if (distance <= stayRadius) {
                      nearTrail = trail;
                      if (!stayStartTime) {
                          stayStartTime = new Date(); // 머문 시작 시간 기록
                          console.log(`Started staying at ${trail.name}`);
                      }
                      break;
                  }
              }

              if (!nearTrail && stayStartTime) {
                  // 산책로를 벗어났다면 머문 시간 계산
                  const stayEndTime = new Date();
                  const timeSpent = (stayEndTime - stayStartTime) / 1000; // 초 단위로 계산
                  if (stayDuration[nearTrail.name] !== undefined) {
                      stayDuration[nearTrail.name] += timeSpent; // 총 머문 시간 업데이트
                      console.log(`Stayed at ${nearTrail.name} for ${timeSpent.toFixed(2)} seconds`);
                  }
                  
                  // 머문 시간 초기화
                  stayStartTime = null;
              }
          }

          // 두 지점 사이의 거리 계산 함수 (미터 단위)
          function calculateDistance(lat1, lng1, lat2, lng2) {
              const R = 6371e3; // 지구 반지름 (미터)
              const φ1 = lat1 * (Math.PI / 180);
              const φ2 = lat2 * (Math.PI / 180);
              const Δφ = (lat2 - lat1) * (Math.PI / 180);
              const Δλ = (lng2 - lng1) * (Math.PI / 180);

              const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +
                        Math.cos(φ1) * Math.cos(φ2) *
                        Math.sin(Δλ / 2) * Math.sin(Δλ / 2);
              const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));

              return R * c; // 두 지점 사이의 거리 반환
          }

            function searchRoute() {
                const startPlace = autocompleteStart.getPlace();
                const endPlace = autocompleteEnd.getPlace();
                const sppb = document.querySelector('#sppbStageSelect');
                const s_altitude = document.querySelector('#scoreSelect');

                if (!startPlace || !endPlace || !sppb || !s_altitude) {
                    alert("빈칸을 채워주세요.");
                    return false;
                }

                const startCoords = {
                    lat: startPlace.geometry.location.lat(),
                    lng: startPlace.geometry.location.lng()
                };
                const endCoords = {
                    lat: endPlace.geometry.location.lat(),
                    lng: endPlace.geometry.location.lng()
                };

                // 경로 그리기
                findRoute(startCoords.lng, startCoords.lat, endCoords.lng, endCoords.lat);
                centerMapOnRoute(startCoords, endCoords);
                setMarkers(startCoords, endCoords);
            }

            function findRoute(startX, startY, endX, endY) {
                fetch("https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&format=json", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "appKey": "cVhL84LFFs9gcbpfi3KiH1uTXSIzKo196YqIK3eN"
                    },
                    body: JSON.stringify({
                        "startX": startX,
                        "startY": startY,
                        "endX": endX,
                        "endY": endY,
                        "reqCoordType": "WGS84GEO",
                        "resCoordType": "EPSG3857",
                        "startName": "출발지",
                        "endName": "도착지"
                    })
                })
                .then(response => response.json())
                .then(data => {
                    const resultData = data.features;
                    const drawInfoArr = [];

                    for (let i in resultData) {
                        const geometry = resultData[i].geometry;
                        if (geometry.type === "LineString") {
                            for (let j in geometry.coordinates) {
                                const latlng = new Tmapv2.Point(geometry.coordinates[j][0], geometry.coordinates[j][1]);
                                const convertPoint = Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlng);
                                const convertChange = new Tmapv2.LatLng(convertPoint._lat, convertPoint._lng);
                                drawInfoArr.push(convertChange);
                            }
                        }
                    }

                    drawLine(drawInfoArr);
                })
                .catch(error => {
                    console.error('경로 탐색 에러:', error);
                    alert("경로 탐색 중 문제가 발생했습니다.");
                });
            }

            function drawLine(arrPoint) {
                if (currentPolyline) {
                    currentPolyline.setMap(null);
                }

                currentPolyline = new Tmapv2.Polyline({
                    path: arrPoint,
                    strokeColor: "#FF0000",
                    strokeWeight: 6,
                    map: map
                });
            }

            function setMarkers(startCoords, endCoords) {
                const marker_s = new Tmapv2.Marker({
                    position: new Tmapv2.LatLng(startCoords.lat, startCoords.lng),
                    icon: "http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png",
                    map: map
                });

                const marker_e = new Tmapv2.Marker({
                    position: new Tmapv2.LatLng(endCoords.lat, endCoords.lng),
                    icon: "http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png",
                    map: map
                });
            }

            function centerMapOnRoute(startCoords, endCoords) {
                let bounds = new Tmapv2.LatLngBounds();
                bounds.extend(new Tmapv2.LatLng(startCoords.lat, startCoords.lng));
                bounds.extend(new Tmapv2.LatLng(endCoords.lat, endCoords.lng));
                map.fitBounds(bounds);
            }

            // 근처 산책로 찾기
            function findTrails() {
                if (currentPolyline) {
                    currentPolyline.setMap(null);
                }

                markerList.forEach(function (markerObj) {
                    markerObj.marker.setMap(null);
                });
                markerList = [];
                hiddenMarkerList = [];
                allMarkerList = [];

                const keywords = ['trail', 'park'];
                const uniqueLocations = new Set();

                keywords.forEach(keyword => {
                    const request = {
                        location: new google.maps.LatLng(userLocation.lat, userLocation.lng),
                        radius: '7000',
                        keyword: keyword,
                    };

                    const service = new google.maps.places.PlacesService(document.createElement('div'));
                    service.nearbySearch(request, (results, status) => {
                        callback(results, status, uniqueLocations);
                    });
                });
            }

            function callback(results, status, uniqueLocations) {
                const messageDiv = document.getElementById("message");
                if (status === google.maps.places.PlacesServiceStatus.OK && results.length > 0) {
                    messageDiv.innerHTML = '';
                    bounds = new Tmapv2.LatLngBounds();

                    results.forEach(result => {
                        const trailLatLng = {
                            lat: result.geometry.location.lat(),
                            lng: result.geometry.location.lng(),
                        };

                        const locationString = `${trailLatLng.lat},${trailLatLng.lng}`;
                        if (!uniqueLocations.has(locationString)) {
                            uniqueLocations.add(locationString);
                            const path = [userLocation, trailLatLng];
                            getElevation(path, result);
                            bounds.extend(new Tmapv2.LatLng(trailLatLng.lat, trailLatLng.lng));
                        }
                    });

                    map.fitBounds(bounds);
                } else {
                    messageDiv.innerHTML = '7km 내에 산책로나 공원이 없습니다.';
                }
            }

            function getElevation(path, trail) {
                const elevator = new google.maps.ElevationService();
                elevator.getElevationAlongPath(
                    { path: path, samples: 10 },
                    function (elevations, status) {
                        if (status === google.maps.ElevationStatus.OK) {
                            const elevationValues = elevations.map(e => e.elevation);
                            const minElevation = Math.min(...elevationValues);
                            const maxElevation = Math.max(...elevationValues);
                            const elevationDifference = maxElevation - minElevation;

                            let score = 0;
                            let color = '';

                            if (elevationDifference <= 30) {
                                score = Math.floor(Math.random() * 5); // 0~4점
                                color = 'red';  // 고도차 낮음
                            } else if (elevationDifference > 30 && elevationDifference <= 100) {
                                score = Math.floor(Math.random() * 4) + 5; // 5~8점
                                color = 'yellow'; // 고도차 중간
                            } else {
                                score = Math.floor(Math.random() * 4) + 9; // 9~12점
                                color = 'green'; // 고도차 큼
                            }

                            let selectedScoreRange = document.getElementById('scoreSelect').value;
                            let [minScore, maxScore] = selectedScoreRange.split('-').map(Number);

                            if (score >= minScore && score <= maxScore) {
                                createMarker(trail.geometry.location.lat(), trail.geometry.location.lng(), minElevation, maxElevation, elevationDifference, trail.name, color);
                            } else {
                                createHiddenMarker(trail.geometry.location.lat(), trail.geometry.location.lng(), minElevation, maxElevation, elevationDifference, trail.name, color);
                            }
                        }
                    }
                );
            }

            function createMarker(lat, lng, minElevation, maxElevation, elevationDifference, name, color) {
                const marker = new Tmapv2.Marker({
                    position: new Tmapv2.LatLng(lat, lng),
                    icon: `http://maps.google.com/mapfiles/ms/icons/${color}-dot.png`,
                    map: map,
                });

                const infoWindow = new Tmapv2.InfoWindow({
                    position: new Tmapv2.LatLng(lat, lng),
                    content: `<div class="info-window-content">
                                <strong>${name}</strong><br>
                                최대 고도: ${maxElevation.toFixed(2)}m<br>
                                최소 고도: ${minElevation.toFixed(2)}m<br>
                                고도 차이: ${elevationDifference.toFixed(2)}m<br>
                                <button onclick="startRouteFromUserLocation(${lat}, ${lng})" class="btn btn-sm btn-primary mt-2">길찾기</button>
                              </div>`,
                    map: null,
                    type: 2
                });

                markerList.push({ marker: marker, infoWindow: infoWindow });
                allMarkerList.push(marker);

                marker.addListener("click", function () {
                    if (activeInfoWindow) {
                        activeInfoWindow.setMap(null);
                    }

                    if (infoWindow.getMap()) {
                        infoWindow.setMap(null);
                    } else {
                        infoWindow.setMap(map);
                        activeInfoWindow = infoWindow;
                    }
                });
            }

            function createHiddenMarker(lat, lng, minElevation, maxElevation, elevationDifference, name, color) {
                const marker = new Tmapv2.Marker({
                    position: new Tmapv2.LatLng(lat, lng),
                    icon: `http://maps.google.com/mapfiles/ms/icons/${color}-dot.png`,
                    map: null,
                });

                const infoWindow = new Tmapv2.InfoWindow({
                    position: new Tmapv2.LatLng(lat, lng),
                    content: `<div class="info-window-content">
                                <strong>${name}</strong><br>
                                최대 고도: ${maxElevation.toFixed(2)}m<br>
                                최소 고도: ${minElevation.toFixed(2)}m<br>
                                고도 차이: ${elevationDifference.toFixed(2)}m
                              </div>`,
                    map: null,
                    type: 2
                });

                hiddenMarkerList.push({ marker: marker, infoWindow: infoWindow });
                allMarkerList.push(marker);
              
                marker.addListener("click", function () {
                    if (activeInfoWindow) {
                        activeInfoWindow.setMap(null);
                    }

                    if (infoWindow.getMap()) {
                        infoWindow.setMap(null);
                    } else {
                        infoWindow.setMap(map);
                        activeInfoWindow = infoWindow;
                    }
                });

                document.getElementById("showAllTrails").style.display = "block";
            }

            function showAllTrails() {
                // 모든 숨겨진 마커를 표시
                hiddenMarkerList.forEach(hiddenMarkerObj => {
                    hiddenMarkerObj.marker.setMap(map);
                });

                // 모든 보이는 마커들도 다시 표시
                allMarkerList.forEach(markerObj => {
                    markerObj.setMap(map);
                });

                alert("모든 산책로가 표시되었습니다.");
            }

            function createAndSharePath() {
                const tags = document.getElementById('path-tags').value;
                if (tags.trim() === "") {
                    alert("경로 태그를 입력하세요.");
                    return;
                }
                alert("경로가 성공적으로 공유되었습니다: " + tags);
            }

            function startRouteFromUserLocation(lat, lng) {
                if (!userLocation) {
                    alert("사용자의 현재 위치를 가져올 수 없습니다.");
                    return;
                }

                if (currentPolyline) {
                    currentPolyline.setMap(null);
                    currentPolyline = null; 
                }
                findRoute(userLocation.lng, userLocation.lat, lng, lat);
            }

            document.getElementById("findTrails").onclick = findTrails;

            window.onload = function () {
                initMap();
            };
        </script>
    
        </div>
        <!-- <section id="features" class="features">
          <div class="container">
              <div class="row content">
                  <div class="col-md-5 order-1 order-md-2" data-aos="fade-left">
                      <img src="images/features-4.svg" class="img-fluid" alt="추천 산책로 이미지">
                  </div>
                  <div class="col-md-7 pt-5 order-2 order-md-1" data-aos="fade-right">
                      <h3>해당 사용자의 추천 산책로의 결과</h3>
                      <p class="fst-italic">이 산책로는 사용자의 위치와 성향을 기반으로 추천되었습니다.</p>
                      <p>산책로를 따라 걷다 보면 자연경관과 함께 여유로운 시간을 보낼 수 있습니다.</p>
                      <p>이용해주셔서 감사합니다.</p>
                  </div>
              </div>
          </div>
        </section> -->
      </section>>

    
   
    
    
    
    <!-- <li><i class="bi bi-check"></i>여기까지 지도 코드.</li> -->
    
    
    <!-- End Features Section -->

    <!-- ======= Portfolio Section ======= -->
    <section id="portfolio" class="portfolio section-bg">
      <div class="container">
<br>
        <div class="portfolio-title">
          <h2 data-aos="fade-in">SHOP</h2>
          <p data-aos="fade-in">랜덤 미션으로 획득한 리워드 포인트를 통해 원하는 상품을 구매할 수 있는 구매 페이지이다.<br>여러가지 브랜드의 기프티콘 뿐만 아니라 건강, 식품까지 다양한 카테고리로 준비가 되어있다. </br>


          </p>
        </div>

        <div class="row">
          <div class="col-lg-12">
            <ul id="portfolio-flters">
              <li data-filter="*" class="filter-active">All</li>
              <li data-filter=".filter-app">기프티콘</li>
              <li data-filter=".filter-card">식품</li>
              <li data-filter=".filter-web">건강</li>
            </ul>
          </div>
        </div>

        <div class="row portfolio-container" data-aos="fade-up" >

          <div class="col-lg-4 col-md-6 portfolio-item filter-app">
            <div class="portfolio-wrap">
              <img src="/images\스타벅스_로고.png" class="img-fluid" alt="">
              <div class="portfolio-links">
                <a href="/images\스타벅스_로고.png" data-gallery="portfolioGallery" class="portfolio-lightbox" title="Starbucks"><i class="bi bi-plus"></i></a>
                <a href="portfolio-details.html" title="More Details"><i class="bi bi-link"></i></a>
              </div>
              <div class="portfolio-info">
                <h4>Starbucks</h4>
                <p>기프티콘</p>
              </div>
            </div>
          </div>

          <div class="col-lg-4 col-md-6 portfolio-item filter-web">
            <div class="portfolio-wrap">
              <img src="/images\종근당_로고.png" class="img-fluid" alt="">
              <div class="portfolio-links">
                <a href="/images\종근당_로고.png" data-gallery="portfolioGallery" class="portfolio-lightbox" title="종근당"><i class="bi bi-plus"></i></a>
                <a href="portfolio-details.html" title="More Details"><i class="bi bi-link"></i></a>
              </div>
              <div class="portfolio-info">
                <h4>종근당</h4>
                <p>건강</p>
              </div>
            </div>
          </div>

          <div class="col-lg-4 col-md-6 portfolio-item filter-app">
            <div class="portfolio-wrap">
              <img src="/images\이디야_로고.jpg" class="img-fluid" alt="">
              <div class="portfolio-links">
                <a href="/images\이디야_로고.jpg" data-gallery="portfolioGallery" class="portfolio-lightbox" title="EDIYA COFFEE"><i class="bi bi-plus"></i></a>
                <a href="portfolio-details.html" title="More Details"><i class="bi bi-link"></i></a>
              </div>
              <div class="portfolio-info">
                <h4>EDIYA COFFEE</h4>
                <p>기프티콘</p>
              </div>
            </div>
          </div>

          <div class="col-lg-4 col-md-6 portfolio-item filter-card">
            <div class="portfolio-wrap">
              <img src="/images\원월드_로고.jpg" class="img-fluid" alt="">
              <div class="portfolio-links">
                <a href="/images\원월드_로고.jpg" data-gallery="portfolioGallery" class="portfolio-lightbox" title="원월드"><i class="bi bi-plus"></i></a>
                <a href="portfolio-details.html" title="More Details"><i class="bi bi-link"></i></a>
              </div>
              <div class="portfolio-info">
                <h4>원월드</h4>
                <p>식품(과일 전문점)</p>
              </div>
            </div>
          </div>

          <div class="col-lg-4 col-md-6 portfolio-item filter-web">
            <div class="portfolio-wrap">
              <img src="/images\정관장_로고.png" class="img-fluid" alt="">
              <div class="portfolio-links">
                <a href="/images\정관장_로고.png" data-gallery="portfolioGallery" class="portfolio-lightbox" title="정관장"><i class="bi bi-plus"></i></a>
                <a href="portfolio-details.html" title="More Details"><i class="bi bi-link"></i></a>
              </div>
              <div class="portfolio-info">
                <h4>정관장</h4>
                <p>건강</p>
              </div>
            </div>
          </div>

          <div class="col-lg-4 col-md-6 portfolio-item filter-app">
            <div class="portfolio-wrap">
              <img src="/images\CU_로고.png" class="img-fluid" alt="">
              <div class="portfolio-links">
                <a href="/images\CU_로고.png" data-gallery="portfolioGallery" class="portfolio-lightbox" title="CU"><i class="bi bi-plus"></i></a>
                <a href="portfolio-details.html" title="More Details"><i class="bi bi-link"></i></a>
              </div>
              <div class="portfolio-info">
                <h4>CU</h4>
                <p>기프티콘
                </p>
              </div>
            </div>
          </div>

          <div class="col-lg-4 col-md-6 portfolio-item filter-card">
            <div class="portfolio-wrap">
              <img src="/images\한돈_로고.jpg" class="img-fluid" alt="">
              <div class="portfolio-links">
                <a href="/images\한돈_로고.jpg" data-gallery="portfolioGallery" class="portfolio-lightbox" title="한돈"><i class="bi bi-plus"></i></a>
                <a href="portfolio-details.html" title="More Details"><i class="bi bi-link"></i></a>
              </div>
              <div class="portfolio-info">
                <h4>한돈</h4>
                <p>식품 (고기 전문점)</p>
              </div>
            </div>
          </div>

          <div class="col-lg-4 col-md-6 portfolio-item filter-card">
            <div class="portfolio-wrap">
              <img src="/images\오설록_로고.png" class="img-fluid" alt="">
              <div class="portfolio-links">
                <a href="/images\오설록_로고.png" data-gallery="portfolioGallery" class="portfolio-lightbox" title="오설록"><i class="bi bi-plus"></i></a>
                <a href="portfolio-details.html" title="More Details"><i class="bi bi-link"></i></a>
              </div>
              <div class="portfolio-info">
                <h4>오설록</h4>
                <p>식품 (차 전문점)</p>
              </div>
            </div>
          </div>

          <div class="col-lg-4 col-md-6 portfolio-item filter-web">
            <div class="portfolio-wrap">
              <img src="/images\센트룸상품_로고.jpg" class="img-fluid" alt="">
              <div class="portfolio-links">
                <a href="/images\센트룸상품_로고.jpg" data-gallery="portfolioGallery" class="portfolio-lightbox" title="센트룸"><i class="bi bi-plus"></i></a>
                <a href="portfolio-details.html" title="More Details"><i class="bi bi-link"></i></a>
              </div>
              <div class="portfolio-info">
                <h4>센트룸</h4>
                <p>건강</p>
              </div>
            </div>
          </div>

        </div>

      </div>
    </section>
    <!-- End Portfolio Section -->

    <!-- ======= Team Section ======= -->
    <!-- ======= Team Section ======= -->
<section id="team" class="team section-bg">
  <div class="container">

    <div class="section-title">
      <h2 data-aos="fade-in">Team</h2>
      <p data-aos="fade-in"> <a>덕성여자대학교 사이버보안 전공 졸업프로젝트 WWM팀<br> </a> Walk With Me 를 함께 만들어간 팀원들 정보</p>
    </div>

    <div class="row">
      <div class="col-xl-3 col-lg-4 col-md-6">
        <div class="member" data-aos="fade-up">
          <div class="pic"><img src="/images\김소현_프로필__.png" alt=""></div>
          <h4>김소현</h4>
          <span>사이버보안 전공</span>
          <span>20211243</span>
          <span>프론트엔드</span>
          <div class="social">
            <a href=""><i class="bi bi-twitter"></i></a>
            <a href=""><i class="bi bi-facebook"></i></a>
            <a href=""><i class="bi bi-instagram"></i></a>
            <a href=""><i class="bi bi-linkedin"></i></a>
          </div>
        </div>
      </div>

      <div class="col-xl-3 col-lg-4 col-md-6">
        <div class="member" data-aos="fade-up" data-aos-delay="100">
          <div class="pic"><img src="/images\박송희_프로필.png" alt=""></div>
          <h4>박송희</h4>
          <span>사이버보안 전공</span>
          <span>20200745</span>
          <span>백엔드</span>
          <div class="social">
            <a href=""><i class="bi bi-twitter"></i></a>
            <a href=""><i class="bi bi-facebook"></i></a>
            <a href=""><i class="bi bi-instagram"></i></a>
            <a href=""><i class="bi bi-linkedin"></i></a>
          </div>
        </div>
      </div>

      <div class="col-xl-3 col-lg-4 col-md-6">
        <div class="member" data-aos="fade-up" data-aos-delay="200">
          <div class="pic"><img src="/images\이보미_프로필.png" alt=""></div>
          <h4>이보미</h4>
          <span>수학 전공</span>
          <span>20201223</span>
          <span>프론트엔드</span>
          <div class="social">
            <a href=""><i class="bi bi-twitter"></i></a>
            <a href=""><i class="bi bi-facebook"></i></a>
            <a href=""><i class="bi bi-instagram"></i></a>
            <a href=""><i class="bi bi-linkedin"></i></a>
          </div>
        </div>
      </div>
    </div>

  </div>
</section><!-- End Team Section -->

    <!-- ======= Pricing Section ======= -->
    <!-- End Pricing Section -->

    <!-- ======= Frequently Asked Questions Section ======= -->
    <section id="faq" class="faq section-bg">
      <div class="container">

        <div class="section-title">
          <h2 data-aos="fade-in">FAQ</h2>
          <p data-aos="fade-in">산책 헬스케어 워크윗미를 이용하면서 궁금했던 점과 자주 묻는 질문에 대한 대답을 나열한 것이다.</p>
        </div>

        <div class="row faq-item d-flex align-items-stretch" data-aos="fade-up">
          <div class="col-lg-5">
            <i class="bx bx-help-circle"></i>
            <h4>워크윗미란 무엇인가요?</h4>
          </div>
          <div class="col-lg-7">
            <p>
              최근 스마트폰과 컴퓨터 사용시간 증가, 신체 활동 시간 감소로 척추측만증, 거북목 증후군 등의 비정상적인 체형변화가 늘어나고 있어 바른 자세와 바르게 걷기의 중요성이 주목받고 있습니다. 즐겁고 일상적인 운동 문화운동을 통한 스트레스 해소로 국민 건강 증진에 힘을 쓰고 싶어 제작된 작품이다.

            </p>
          </div>
        </div>

        <div class="row faq-item d-flex align-items-stretch" data-aos="fade-up" data-aos-delay="100">
          <div class="col-lg-5">
            <i class="bx bx-help-circle"></i>
            <h4>사람들 혹은 기타 대상에게 주는 이점은 무엇인가요?</h4>
          </div>
          <div class="col-lg-7">
            <p>
              건강 문제로 고민이 많은 현대인들, 격한 운동보다는 가벼운 산책으로 재밌게 운동을 하고 싶은 사람들에게 삶에서 소소한 행복을 찾을 수 있다.
            </p>
          </div>
        </div>

        <div class="row faq-item d-flex align-items-stretch" data-aos="fade-up" data-aos-delay="200">
          <div class="col-lg-5">
            <i class="bx bx-help-circle"></i>
            <h4>위크윗미 만의 특징은?</h4>
          </div>
          <div class="col-lg-7">
            <p>
              워크윗미 만의 특징으로는 개인맞춤 서비스가 있다. 예를 들면, 로그인을 통해 개인 운동 진행 상황이나 맞춤 산책 코스 추천 등 사용자에게 맞는 산책 서비스를 제공한다. 그 이외에도 특정 위치 지점에 도착하면 포인트를 증정하는 게임을 통해 지루하지 않는 산책 어플 서비스를 개발할 예정이다.
            </p>
          </div>
        </div>

        <div class="row faq-item d-flex align-items-stretch" data-aos="fade-up" data-aos-delay="300">
          <div class="col-lg-5">
            <i class="bx bx-help-circle"></i>
            <h4>랜덤 미션으로 획득한 리워드는 어떻게 사용할 수 있나요?</h4>
          </div>
          <div class="col-lg-7">
            <p>
              해당 Shop 페이지에서 리워드 포인트에 맞게 원하는 기프티콘, 상품 등을 구매할 수 있다.
            </p>
          </div>
        </div>

        <div class="row faq-item d-flex align-items-stretch" data-aos="fade-up" data-aos-delay="400">
          <div class="col-lg-5">
            <i class="bx bx-help-circle"></i>
            <h4>커뮤니티 이용방법은 어떻게 되나요?</h4>
          </div>
          <div class="col-lg-7">
            <p>
              커뮤니티 페이지에서 사진이나 글을 올리는 활동을 통해 주기적으로 올린 이용자에게 리워드가 제공될 뿐만 아니라 다른 사람들에게 공개적으로 본인만의 산책 경로를 추천하고 실시간으로 소통, 공유할 수 있다.
            </p>
          </div>
        </div>

      </div>
    </section><!-- End Frequently Asked Questions Section -->

    <!-- ======= Contact Section ======= -->
    <section id="contact" class="contact section-bg">
      <div class="container" data-aos="fade-up">

        <div class="section-title">
          <h2>연락처</h2>
          <p>DUKSUNG WOMEN'S UNIVERSITY CYBER SECURITY</p>
        </div>

        <div class="row">

          <div class="col-lg-6">

            <div class="row">
              <div class="col-md-12">
                <div class="info-box" data-aos="fade-up">
                  <i class="bx bx-map"></i>
                  <h3>Our Address</h3>
                  <p>[01369] 서울특별시 도봉구 삼양로 144길 33 덕성여자대학교 차미리사관 229호</p>
                </div>
              </div>
              <div class="col-md-6">
                <div class="info-box mt-4" data-aos="fade-up" data-aos-delay="100">
                  <i class="bx bx-envelope"></i>
                  <h3>Email Us</h3>
                  <p>sohyeon53qq@gmail.com<br>psh10922@duksung.ac.kr<br>lcil2293@naver.com <br>shsm1083@naver.com</p>
                </div>
              </div>
              <div class="col-md-6">
                <div class="info-box mt-4" data-aos="fade-up" data-aos-delay="100">
                  <i class="bx bx-phone-call"></i>
                  <h3>Call Us</h3>
                  <p>02-901-8677</p>
                </div>
              </div>
            </div>

          </div>

          <div class="col-lg-6 mt-4 mt-lg-0">
            <form action="forms/contact.php" method="post" role="form" class="php-email-form w-100" data-aos="fade-up">
              <div class="row">
                <div class="col-md-6 form-group">
                  <input type="text" name="name" class="form-control" id="name" placeholder="Your Name" required>
                </div>
                <div class="col-md-6 form-group mt-3 mt-md-0">
                  <input type="email" class="form-control" name="email" id="email" placeholder="Your Email" required>
                </div>
              </div>
              <div class="form-group mt-3">
                <input type="text" class="form-control" name="subject" id="subject" placeholder="Subject" required>
              </div>
              <div class="form-group mt-3">
                <textarea class="form-control" name="message" rows="5" placeholder="Message" required></textarea>
              </div>
              <div class="my-3">
                <div class="loading">Loading</div>
                <div class="error-message"></div>
                <div class="sent-message">Your message has been sent. Thank you!</div>
              </div>
              <div class="text-center"><button type="submit">Send Message</button></div>
            </form>
          </div>

        </div>

      </div>
    </section><!-- End Contact Section -->

  </main><!-- End #main -->

  <!-- ======= Footer ======= -->
  <footer id="footer">

    <div class="footer-top">

      <div class="container">

        <div class="row  justify-content-center">
          <div class="col-lg-6">
            <h3>WWM</h3>
            <p>Walk With Me!!</p>
          </div>
        </div>

        

      </div>
    </div>

    <div class="container footer-bottom clearfix">
      <div class="copyright">
        &copy; Copyright <strong><span>WWM</span></strong>. All Rights Reserved
      </div>
      <div class="credits">
        <!-- All the links in the footer should remain intact. -->
        <!-- You can delete the links only if you purchased the pro version. -->
        <!-- Licensing information: https://bootstrapmade.com/license/ -->
        <!-- Purchase the pro version with working PHP/AJAX contact form: https://bootstrapmade.com/bocor-bootstrap-template-nice-animation/ -->
        Designed by <a href="https://bootstrapmade.com/">BootstrapMade</a>
      </div>
    </div>
  </footer><!-- End Footer -->

  <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>

  <!-- Vendor JS Files -->
  <script src="/javascripts/aos.js"></script>
  <script src="/javascripts/bootstrap.bundle.min.js"></script>
  <script src="/javascripts/glightbox.min.js"></script>
  <script src="/javascripts/isotope.pkgd.min.js"></script>
  <script src="/javascripts/swiper-bundle.min.js"></script>
  <script src="/javascripts/validate.js"></script>
  

  <!-- Template Main JS File -->
  <script src="/javascripts\main.js"></script>

</body>

</html>
